/* 
 * Copyright 2013 PG Alise (http://www.pg-alise.de/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 */
 
// Block definition (there may be more than one block per file)
FUNCTION_BLOCK energy

// Define input variables
VAR_INPUT
    temperature : REAL;
    rain : REAL;
    brightness : REAL;
    timeOfDay : REAL;
    dayOfWeek : REAL;
    season : REAL;
    storm : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    percentage : REAL;
END_VAR

// Fuzzify input variable 'temperature'
FUZZIFY temperature
	TERM cold := (-15, 1) (-5, 1) (5, 0.7) (10, 0);
	TERM average := (5, 0) (15, 1) (25, 0);
	TERM hot := (15, 0) (35, 1) (45, 1);
END_FUZZIFY

// Fuzzify input variable 'rain'
FUZZIFY rain
    TERM low := (0, 1) (150, 0); 
    TERM middle := (100, 0) (200, 1) (300,0);
    TERM high := (250, 0) (400, 1);
END_FUZZIFY

// Fuzzify input variable 'brightness'
FUZZIFY brightness
	TERM dark := (0, 1) (12000, 0);
	TERM bright := (3000, 0) (15000, 1);
END_FUZZIFY

// Fuzzify input variable 'timeOfDay'
FUZZIFY timeOfDay
    TERM early := (3, 0) (4, 1) (10, 1) (11, 0);
    TERM midday := (10, 0) (11, 1) (16, 1) (17, 0);
    TERM late :=  (16, 0) (17, 1) (21, 1) (22, 0);
    TERM night := (0, 1) (3, 1) (4, 0) (21, 0) (22, 1) (24, 1);
END_FUZZIFY

//Fuzzify input variable 'dayOfWeek`
FUZZIFY dayOfWeek
	TERM week := (1, 1) (2, 1) (3, 1) (4, 1) (6, 0);
	TERM weekend := (4, 0) (6, 1) (7, 1);
END_FUZZIFY

//Fuzzify input variable 'season'
FUZZIFY season
    //Seasons are given in month data 1 = january, 2 = february, etc.
        TERM spring := (2, 0) (3, 1) (4, 0.75) (5, 0.5) (6, 0);
	TERM summer := (5, 0) (6, 0.5) (7, 1) (8, 1) (9, 0);
        TERM autumn := (8, 0) (9, 0.5) (10, 1) (11, 0.5) (12, 0);
	TERM winter := (1, 0.75) (2, 0.5) (3, 0) (10, 0) (11, 0) (12, 1);
END_FUZZIFY

// Fuzzify input variable 'storm'
FUZZIFY storm
    // Storm gets values 1 - 5 for low, 6 - 8 for average and 9 - 12 for high storm
    TERM breeze := (1, 0) (2, 0.5) (3, 0.6) (4, 0.75) (5, 1); 
    TERM windy := (6, 0.5) (7, 0.75) (8,1);
    TERM hurricane := (9, 0.7) (10, 0.8) (11, 0.9) (12, 1);
END_FUZZIFY

// Defuzzify output variable 'percentage'
DEFUZZIFY percentage
	TERM verylow := (0, 1) (10, 1) (22, 0);
    TERM low := (15, 0) (20, 0.5) (30, 1) (42, 0);
    TERM medium := (35, 0) (40, 0.5) (50, 1) (62, 0);
    TERM high := (55, 0) (60, 0.5) (70, 1) (82, 0);
    TERM veryhigh := (75, 0) (80, 0.5) (90, 1) (100, 1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 50 (if no rule activates defuzzifier)
    DEFAULT := 100;
END_DEFUZZIFY


// RULEBLOCK for bakery g5:
RULEBLOCK g5
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;
    
    RULE 1 : IF timeOfDay IS early AND temperature IS NOT average THEN percentage IS veryhigh;
    
    RULE 2 : IF timeOfDay IS early AND temperature IS average THEN percentage IS high;
    
    RULE 3 : IF timeOfDay IS NOT early AND temperature IS NOT average THEN percentage IS low;
    
    RULE 4 : IF timeOfDay IS NOT early AND temperature IS average THEN percentage IS verylow;
END_RULEBLOCK

// RULEBLOCK for business on weekend g6:
RULEBLOCK g6
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF dayOfWeek IS week AND temperature IS average THEN percentage IS verylow;
    
    RULE 2 : IF dayOfWeek IS week AND temperature IS NOT average THEN percentage IS low;
    
    RULE 3 : IF dayOfWeek IS weekend AND temperature IS average THEN percentage IS high;
    
    RULE 4 : IF dayOfWeek IS weekend AND temperature IS NOT average THEN percentage IS veryhigh;
        
END_RULEBLOCK

// RULEBLOCK for farm building l0:
RULEBLOCK l0
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

	RULE 1 : IF season IS winter THEN percentage IS verylow;
	
	RULE 2 : IF season IS NOT winter THEN percentage IS high;
	
	RULE 3 : IF season IS NOT winter AND rain IS high THEN percentage IS low;
	
	RULE 4 : IF season IS NOT winter AND rain IS middle THEN percentage IS medium;
	
	RULE 5 : IF season IS NOT winter AND storm IS windy THEN percentage IS medium;
	
	RULE 6 : IF season IS NOT winter AND storm IS hurricane THEN percentage IS verylow;
	
	RULE 7 : IF season IS NOT winter AND timeOfDay IS NOT night THEN percentage IS veryhigh;
	
END_RULEBLOCK

// RULEBLOCK for farm building other l2:
RULEBLOCK l2
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

	RULE 1 : IF season IS winter THEN percentage IS verylow;
	
	RULE 2 : IF season IS NOT winter THEN percentage IS high;
	
	RULE 3 : IF season IS NOT winter AND rain IS high THEN percentage IS low;
	
	RULE 4 : IF season IS NOT winter AND rain IS middle THEN percentage IS medium;
	
	RULE 5 : IF season IS NOT winter AND storm IS windy THEN percentage IS medium;
	
	RULE 6 : IF season IS NOT winter AND storm IS hurricane THEN percentage IS verylow;
	
	RULE 7 : IF season IS NOT winter AND timeOfDay IS NOT night THEN percentage IS veryhigh;
END_RULEBLOCK

// RULEBLOCK for farm building with animal breeding l1
RULEBLOCK l1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

	RULE 1 : IF temperature IS cold THEN percentage IS veryhigh;
	
	RULE 2 : IF temperature IS average THEN percentage IS high;
	
	RULE 3 : IF temperature IS hot THEN percentage IS veryhigh;
	
	RULE 4 : IF timeOfDay IS NOT night THEN percentage IS high;
	
	RULE 5 : IF timeOfDay IS night THEN percentage IS low;
END_RULEBLOCK

// RULEBLOCK for household h0:
RULEBLOCK h0
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;	
	
	RULE 1 : IF temperature IS NOT average THEN percentage IS high;
	
	RULE 2 : IF temperature IS average THEN percentage IS low;
	
	RULE 4 : IF timeOfDay IS night THEN percentage IS low;
	
	RULE 5 : IF rain IS NOT low THEN percentage IS high;
	
	RULE 6 : IF dayOfWeek IS weekend AND timeOfDay IS NOT night THEN percentage IS high;
	
	RULE 7 : IF dayOfWeek IS week AND (timeOfDay IS early OR timeOfDay IS late) THEN percentage IS high;
	
	RULE 8 : IF timeOfDay IS NOT night AND dayOfWeek IS weekend AND temperature IS NOT average THEN percentage IS veryhigh;
	
	RULE 9 : IF timeOfDay IS late AND dayOfWeek IS week AND temperature IS NOT average THEN percentage IS veryhigh;
	
	RULE 10 : IF timeOfDay IS NOT night AND dayOfWeek IS weekend AND temperature IS average AND rain IS NOT low THEN percentage IS veryhigh;
	
	RULE 11 : IF (timeOfDay IS early OR timeOfDay IS midday) AND dayOfWeek IS week AND temperature IS NOT cold THEN percentage IS verylow;
	
	RULE 12 : IF (timeOfDay IS early OR timeOfDay IS midday) AND dayOfWeek IS week AND temperature IS cold THEN percentage IS medium;
	
	RULE 13 : IF timeOfDay IS night AND temperature IS NOT average THEN percentage IS medium;
	
	RULE 14 : IF timeOfDay IS night AND temperature IS average THEN percentage IS verylow;
END_RULEBLOCK

// RULEBLOCK for industry general g0:
RULEBLOCK g0
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;
	
	RULE 1 : IF temperature IS NOT average AND dayOfWeek IS week AND (timeOfDay IS early OR timeOfDay IS midday) THEN percentage IS veryhigh;
	
	RULE 2 : IF temperature IS average AND dayOfWeek IS week AND (timeOfDay IS early OR timeOfDay IS midday) THEN percentage IS high;
	
	RULE 3 : IF temperature IS NOT average AND dayOfWeek IS weekend THEN percentage IS low;
	
	RULE 4 : IF temperature IS average AND dayOfWeek IS weekend THEN percentage IS verylow;
	
	RULE 5 : IF temperature IS NOT average AND (timeOfDay IS night OR timeOfDay IS late) THEN percentage IS low;
	
	RULE 6 : IF temperature IS average AND (timeOfDay IS night OR timeOfDay IS late) THEN percentage IS verylow;
END_RULEBLOCK

// RULEBLOCK for industry on workdays g1:
RULEBLOCK g1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

	RULE 1 : IF temperature IS NOT average AND dayOfWeek IS week AND (timeOfDay IS early OR timeOfDay IS midday) THEN percentage IS veryhigh;
	
	RULE 2 : IF temperature IS average AND dayOfWeek IS week AND (timeOfDay IS early OR timeOfDay IS midday) THEN percentage IS high;
	
	RULE 3 : IF temperature IS NOT average AND dayOfWeek IS weekend THEN percentage IS low;
	
	RULE 4 : IF temperature IS average AND dayOfWeek IS weekend THEN percentage IS verylow;
	
	RULE 5 : IF temperature IS NOT average AND (timeOfDay IS night OR timeOfDay IS late) THEN percentage IS low;
	
	RULE 6 : IF temperature IS average AND (timeOfDay IS night OR timeOfDay IS late) THEN percentage IS verylow;

END_RULEBLOCK

// RULEBLOCK for industry with consumption night g2:
RULEBLOCK g2
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

	RULE 1 : IF (timeOfDay IS night OR timeOfDay IS early) AND temperature IS NOT average THEN percentage IS veryhigh;
	
	RULE 2 : IF (timeOfDay IS night OR timeOfDay IS early) AND temperature IS average THEN percentage IS high;
	
	RULE 3 : IF (timeOfDay IS midday OR timeOfDay IS late) AND temperature IS NOT average THEN percentage IS low;
	
	RULE 4 : IF (timeOfDay IS midday OR timeOfDay IS late) AND temperature IS average THEN percentage IS verylow;
END_RULEBLOCK

// RULEBLOCK for industry working g3:
RULEBLOCK g3
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

	RULE 1 : IF temperature IS NOT average AND dayOfWeek IS week AND (timeOfDay IS early OR timeOfDay IS midday) THEN percentage IS veryhigh;
	
	RULE 2 : IF temperature IS average AND dayOfWeek IS week AND (timeOfDay IS early OR timeOfDay IS midday) THEN percentage IS high;
	
	RULE 3 : IF temperature IS NOT average AND dayOfWeek IS weekend THEN percentage IS low;
	
	RULE 4 : IF temperature IS average AND dayOfWeek IS weekend THEN percentage IS verylow;
	
	RULE 5 : IF temperature IS NOT average AND (timeOfDay IS night OR timeOfDay IS late) THEN percentage IS low;
	
	RULE 6 : IF temperature IS average AND (timeOfDay IS night OR timeOfDay IS late) THEN percentage IS verylow;
END_RULEBLOCK

// RULEBLOCK for shop g4:
RULEBLOCK g4
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF (timeOfDay IS midday OR timeOfDay IS late) AND temperature IS average THEN percentage IS high;
    
    RULE 2 : IF (timeOfDay IS midday OR timeOfDay IS late) AND temperature IS NOT average THEN percentage IS veryhigh;
    
    RULE 3 : IF (timeOfDay IS early OR timeOfDay IS night) AND temperature IS NOT average THEN percentage IS low;
    
   	RULE 4 : IF (timeOfDay IS early OR timeOfDay IS night) AND temperature IS average THEN percentage IS verylow;
   	
   	RULE 6 : IF (timeOfDay IS midday OR timeOfDay IS late) AND rain IS NOT low THEN percentage IS medium;
   	
   	RULE 7 : IF (timeOfDay IS midday OR timeOfDay IS late) AND storm IS NOT breeze THEN percentage IS low; 
END_RULEBLOCK

END_FUNCTION_BLOCK
